# Maximum range sensor reading in meters that results in an obstacle being placed in the costmap
obstacle_range: 3.0

# Outside of this range is considered free space
raytrace_range: 4.0
robot_radius: 0.3

# voxel map configuration; z-voxels 0 are filled by bumpers and 1 by laser scan 
map_type: voxel
origin_z: 0.0
z_resolution: 0.2
z_voxels: 2
publish_voxel_map: false

scan: {sensor_frame: laser, data_type: LaserScan, topic: scan, marking: true, clearing: true, min_obstacle_height: 0.05, max_obstacle_height: 0.6}

# Footprint of the robot with (0,0) being the center (in meters)
footprint: [[-0.35, -0.3], [-0.35, 0.3], [0.35, 0.3], [0.35, -0.3]]

# The static map created using SLAM is being published to this topic
map_topic: /map

# Global reference frame for the costmaps
global_frame: map

# Base frame of the robot
robot_base_frame: base_link

# Frequency in Hz for the costmap to be updated
update_frequency: 5.0

# Frequency in Hz for the costmap to publish display information
publish_frequency: 5.0

# Delay in transform tf data that is tolerable in seconds
transform_tolerance: 0.2

# Width of the map in meters
width: 75

# Height of the map in meters
height: 75

rolling_window: true

# # Map layer built with SLAM
# static_layer:
#   map_topic: /map
#   subscribe_to_updates: false

# # Map layer that contains information about the obstacles in the environment as detected by LIDAR
# obstacle_layer:
#   observation_sources: scan
#   laser_scan_sensor: {sensor_frame: hokuyo_link, data_type: LaserScan, topic: scan, marking: true, clearing: true}

# Map layer that adds a cushion in meters around obstacles
inflation_layer:
  inflation_radius: 1.5
